/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  GatewayUtilLib,
  GatewayUtilLibInterface,
} from "../../libraries/GatewayUtilLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_other",
        type: "uint256",
      },
    ],
    name: "generateSeed",
    outputs: [
      {
        internalType: "uint256",
        name: "seed",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61012761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063d3268aca146038575b600080fd5b6093604336600460a5565b6040516bffffffffffffffffffffffff19606085901b166020820152603481018390526054810182905260009060740160408051601f198184030181529190528051602090910120949350505050565b60405190815260200160405180910390f35b60008060006060848603121560b957600080fd5b833573ffffffffffffffffffffffffffffffffffffffff8116811460dc57600080fd5b9560208501359550604090940135939250505056fea2646970667358221220f43231be6676f5349b6c5f6ea4bef19d7df1d2f999cf934cd400ed4c92af309864736f6c63430008060033";

type GatewayUtilLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatewayUtilLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GatewayUtilLib__factory extends ContractFactory {
  constructor(...args: GatewayUtilLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GatewayUtilLib> {
    return super.deploy(overrides || {}) as Promise<GatewayUtilLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GatewayUtilLib {
    return super.attach(address) as GatewayUtilLib;
  }
  override connect(signer: Signer): GatewayUtilLib__factory {
    return super.connect(signer) as GatewayUtilLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatewayUtilLibInterface {
    return new utils.Interface(_abi) as GatewayUtilLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GatewayUtilLib {
    return new Contract(address, _abi, signerOrProvider) as GatewayUtilLib;
  }
}
